[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								],
								"flowUrl": "rxjs/call-expressions/map/flow"
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								],
								"flowUrl": "rxjs/call-expressions/tap/flow"
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_JOIN",
								"label": "Join Observable to Property",
								"callPath": [
									"data$"
								],
								"flowUrl": "rxjs/call-expressions/join/flow"
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query injectable/inject/flow: {
	"funcParams": {
		"label": "Inject",
		"actionId": "INJECT",
		"callPath": [],
		"flowUrl": "injectable/inject/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/inject/flow"
}
[info] [CLI] Called Query injectable/inject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "injectable",
				"title": "Which entity to inject?",
				"type": "multi-option",
				"options": [
					{
						"id": "httpClient",
						"dataType": "External",
						"name": "HttpClient",
						"type": "HttpClient",
						"relatedTypes": {}
					},
					{
						"id": "activatedRoute",
						"dataType": "External",
						"name": "ActivatedRoute",
						"type": "ActivatedRoute",
						"relatedTypes": {}
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "injectable/inject",
				"payload": {
					"injectingPath": "injectable.file",
					"type": "injectable.type",
					"dataType": "injectable.dataType"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query injectable/inject/flow"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"type": "HttpClient",
		"dataType": "External"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								],
								"flowUrl": "rxjs/call-expressions/map/flow"
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								],
								"flowUrl": "rxjs/call-expressions/tap/flow"
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_JOIN",
								"label": "Join Observable to Property",
								"callPath": [
									"data$"
								],
								"flowUrl": "rxjs/call-expressions/join/flow"
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query injectable/inject/flow: {
	"funcParams": {
		"label": "Inject",
		"actionId": "INJECT",
		"callPath": [],
		"flowUrl": "injectable/inject/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/inject/flow"
}
[info] [CLI] Called Query injectable/inject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "injectable",
				"title": "Which entity to inject?",
				"type": "multi-option",
				"options": [
					{
						"id": "httpClient",
						"dataType": "External",
						"name": "HttpClient",
						"type": "HttpClient",
						"relatedTypes": {}
					},
					{
						"id": "activatedRoute",
						"dataType": "External",
						"name": "ActivatedRoute",
						"type": "ActivatedRoute",
						"relatedTypes": {}
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "injectable/inject",
				"payload": {
					"injectingPath": "injectable.file",
					"type": "injectable.type",
					"dataType": "injectable.dataType"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query injectable/inject/flow"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"type": "HttpClient",
		"dataType": "External"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[error] [CommandBus]: Error INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"error": {},
	"level": "error",
	"message": "[CommandBus]: Error INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								],
								"flowUrl": "rxjs/call-expressions/map/flow"
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								],
								"flowUrl": "rxjs/call-expressions/tap/flow"
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_JOIN",
								"label": "Join Observable to Property",
								"callPath": [
									"data$"
								],
								"flowUrl": "rxjs/call-expressions/join/flow"
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query injectable/inject/flow: {
	"funcParams": {
		"label": "Inject",
		"actionId": "INJECT",
		"callPath": [],
		"flowUrl": "injectable/inject/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/inject/flow"
}
[info] [CLI] Called Query injectable/inject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "injectable",
				"title": "Which entity to inject?",
				"type": "multi-option",
				"options": [
					{
						"id": "httpClient",
						"dataType": "External",
						"name": "HttpClient",
						"type": "HttpClient",
						"relatedTypes": {}
					},
					{
						"id": "activatedRoute",
						"dataType": "External",
						"name": "ActivatedRoute",
						"type": "ActivatedRoute",
						"relatedTypes": {}
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "injectable/inject",
				"payload": {
					"injectingPath": "injectable.file",
					"type": "injectable.type",
					"dataType": "injectable.dataType"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query injectable/inject/flow"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"type": "HttpClient",
		"dataType": "External"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[error] [CommandBus]: Error INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"error": {
		"filePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"oldText": "import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { EmployeeModel } from '../../model/employee.model';\n\n@Component({\n  selector: 'employee-list',\n  templateUrl: './employee-list.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EmployeeListComponent {\n\n  data$: Observable<EmployeeModel[] | null> = \n  \n}\n",
		"newText": "import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { EmployeeModel } from '../../model/employee.model';\n\n@Component({\n  selector: 'employee-list',\n  templateUrl: './employee-list.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EmployeeListComponent {\n\n  data$: Observable<EmployeeModel[] | null> =\n\n  constructor() {\n  }\n}\n"
	},
	"level": "error",
	"message": "[CommandBus]: Error INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								],
								"flowUrl": "rxjs/call-expressions/map/flow"
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								],
								"flowUrl": "rxjs/call-expressions/tap/flow"
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_JOIN",
								"label": "Join Observable to Property",
								"callPath": [
									"data$"
								],
								"flowUrl": "rxjs/call-expressions/join/flow"
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query injectable/inject/flow: {
	"funcParams": {
		"label": "Inject",
		"actionId": "INJECT",
		"callPath": [],
		"flowUrl": "injectable/inject/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/inject/flow"
}
[info] [CLI] Called Query injectable/inject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "injectable",
				"title": "Which entity to inject?",
				"type": "multi-option",
				"options": [
					{
						"id": "httpClient",
						"dataType": "External",
						"name": "HttpClient",
						"type": "HttpClient",
						"relatedTypes": {}
					},
					{
						"id": "activatedRoute",
						"dataType": "External",
						"name": "ActivatedRoute",
						"type": "ActivatedRoute",
						"relatedTypes": {}
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "injectable/inject",
				"payload": {
					"injectingPath": "injectable.file",
					"type": "injectable.type",
					"dataType": "injectable.dataType"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query injectable/inject/flow"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"type": "HttpClient",
		"dataType": "External"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [CLI] Calling Query entity/create/flow: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/model"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/create/flow"
}
[info] [CLI] Called Query entity/create/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": [
					{
						"id": "component",
						"suffix": "Component",
						"folder": "ui/$name$",
						"type": "ANGULAR_COMPONENT",
						"insideOf": "App",
						"config": {
							"stylesExtension": "none",
							"viewEncapsulation": "Emulated",
							"selector": "generated",
							"changeDetectionStrategy": "OnPush"
						}
					},
					{
						"id": "dataService",
						"suffix": "Service",
						"folder": "services",
						"type": "ANGULAR_SERVICE",
						"insideOf": "App",
						"config": {
							"provideStrategy": "root"
						}
					},
					{
						"id": "model",
						"suffix": "Model",
						"folder": "model",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					},
					{
						"id": "response",
						"suffix": "Response",
						"folder": "services",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					}
				],
				"extraOptions": [],
				"property": "id",
				"canBeEmpty": false
			}
		],
		"request": {}
	},
	"level": "info",
	"message": "[CLI] Called Query entity/create/flow"
}
[info] [CLI] Calling Query angular-component/create/flow: {
	"funcParams": {
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/create/flow"
}
[info] [CLI] Called Query angular-component/create/flow: {
	"result": {
		"context": {
			"entity": {
				"id": "component"
			}
		},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the component name?",
				"subtitle": "e.g. user",
				"type": "text-input",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/create",
				"payload": {
					"name": "name.value",
					"entityId": "entity.id"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/create/flow"
}
[info] [CLI] Calling Query entity/create/flow: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/create/flow"
}
[info] [CLI] Called Query entity/create/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": [
					{
						"id": "component",
						"suffix": "Component",
						"folder": "ui/$name$",
						"type": "ANGULAR_COMPONENT",
						"insideOf": "App",
						"config": {
							"stylesExtension": "none",
							"viewEncapsulation": "Emulated",
							"selector": "generated",
							"changeDetectionStrategy": "OnPush"
						}
					},
					{
						"id": "dataService",
						"suffix": "Service",
						"folder": "services",
						"type": "ANGULAR_SERVICE",
						"insideOf": "App",
						"config": {
							"provideStrategy": "root"
						}
					},
					{
						"id": "model",
						"suffix": "Model",
						"folder": "model",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					},
					{
						"id": "response",
						"suffix": "Response",
						"folder": "services",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					}
				],
				"extraOptions": [],
				"property": "id",
				"canBeEmpty": false
			}
		],
		"request": {}
	},
	"level": "info",
	"message": "[CLI] Called Query entity/create/flow"
}
[info] [CLI] Calling Query data-structure/create/flow: {
	"funcParams": {
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Query data-structure/create/flow"
}
[info] [CLI] Called Query data-structure/create/flow: {
	"result": {
		"context": {
			"entity": {
				"id": "model"
			}
		},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the model name?",
				"subtitle": "e.g. user",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "properties",
				"title": "What are the model properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input",
				"canBeEmpty": true
			}
		],
		"request": {
			"config": {
				"url": "data-structure/create",
				"payload": {
					"name": "name.value",
					"entityId": "entity.id",
					"properties": "properties.value"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query data-structure/create/flow"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "single",
		"entityId": "model",
		"properties": {}
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"name": "single",
		"suffix": "Model",
		"properties": {},
		"absoluteFolderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/model"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"name": "single",
		"suffix": "Model",
		"properties": {},
		"absoluteFolderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/model"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/create/flow: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/create/flow"
}
[info] [CLI] Called Query entity/create/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": [
					{
						"id": "component",
						"suffix": "Component",
						"folder": "ui/$name$",
						"type": "ANGULAR_COMPONENT",
						"insideOf": "App",
						"config": {
							"stylesExtension": "none",
							"viewEncapsulation": "Emulated",
							"selector": "generated",
							"changeDetectionStrategy": "OnPush"
						}
					},
					{
						"id": "dataService",
						"suffix": "Service",
						"folder": "services",
						"type": "ANGULAR_SERVICE",
						"insideOf": "App",
						"config": {
							"provideStrategy": "root"
						}
					},
					{
						"id": "model",
						"suffix": "Model",
						"folder": "model",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					},
					{
						"id": "response",
						"suffix": "Response",
						"folder": "services",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					}
				],
				"extraOptions": [],
				"property": "id",
				"canBeEmpty": false
			}
		],
		"request": {}
	},
	"level": "info",
	"message": "[CLI] Called Query entity/create/flow"
}
[info] [CLI] Calling Query angular-service/create/flow: {
	"funcParams": {
		"entityId": "dataService"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-service/create/flow"
}
[info] [CLI] Called Query angular-service/create/flow: {
	"result": {
		"context": {
			"entity": {
				"id": "dataService"
			}
		},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the dataService name?",
				"subtitle": "e.g. user",
				"type": "text-input",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-service/create",
				"payload": {
					"name": "name.value",
					"entityId": "entity.id"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-service/create/flow"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "single",
		"entityId": "dataService"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services",
		"name": "single",
		"suffix": "Service",
		"provideStrategy": "root"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event ServiceCreatedEvent: {
	"type": "ServiceCreatedEvent",
	"payload": {
		"createdFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ServiceCreatedEvent"
}
[info] [EventBus]: Broadcasted ServiceCreatedEvent: {
	"event": {
		"createdFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ServiceCreatedEvent"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services",
		"name": "single",
		"suffix": "Service",
		"provideStrategy": "root"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/create/flow: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/create/flow"
}
[info] [CLI] Called Query entity/create/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": [
					{
						"id": "component",
						"suffix": "Component",
						"folder": "ui/$name$",
						"type": "ANGULAR_COMPONENT",
						"insideOf": "App",
						"config": {
							"stylesExtension": "none",
							"viewEncapsulation": "Emulated",
							"selector": "generated",
							"changeDetectionStrategy": "OnPush"
						}
					},
					{
						"id": "dataService",
						"suffix": "Service",
						"folder": "services",
						"type": "ANGULAR_SERVICE",
						"insideOf": "App",
						"config": {
							"provideStrategy": "root"
						}
					},
					{
						"id": "model",
						"suffix": "Model",
						"folder": "model",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					},
					{
						"id": "response",
						"suffix": "Response",
						"folder": "services",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					}
				],
				"extraOptions": [],
				"property": "id",
				"canBeEmpty": false
			}
		],
		"request": {}
	},
	"level": "info",
	"message": "[CLI] Called Query entity/create/flow"
}
[info] [CLI] Calling Query angular-component/create/flow: {
	"funcParams": {
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/create/flow"
}
[info] [CLI] Called Query angular-component/create/flow: {
	"result": {
		"context": {
			"entity": {
				"id": "component"
			}
		},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the component name?",
				"subtitle": "e.g. user",
				"type": "text-input",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/create",
				"payload": {
					"name": "name.value",
					"entityId": "entity.id"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/create/flow"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "single",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "single",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "single",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "rxjs/methods/flow"
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "rxjs/methods/flow"
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "rxjs/methods/flow"
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": [],
		"flowUrl": "rxjs/methods/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input",
				"canBeEmpty": true
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<SingleModel>"
					},
					{
						"name": "Observable<SingleModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "method/create",
				"payload": {
					"name": "name.value",
					"params": "params.value",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "rxjs/methods/flow"
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": [],
		"flowUrl": "rxjs/methods/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input",
				"canBeEmpty": true
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<SingleModel>"
					},
					{
						"name": "Observable<SingleModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "method/create",
				"payload": {
					"name": "name.value",
					"params": "params.value",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [CLI] Calling Command method/create: {
	"funcParams": {
		"name": "getAll",
		"params": {},
		"returnType": "Observable<SingleModel[]>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
		"name": "getAll",
		"params": {},
		"returnType": "Observable<SingleModel[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
		"name": "getAll",
		"params": {},
		"returnType": "Observable<SingleModel[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method/create: {
	"message": "[CLI] Called Command method/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								],
								"flowUrl": "rxjs/methods/statement/flow"
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "rxjs/methods/flow"
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getAll"
		],
		"flowUrl": "rxjs/methods/statement/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "SingleService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"SingleService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"getAll"
		],
		"dependencyCallPath": [
			"get"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [EventBus]: Broadcasting event ServiceDependencyInjected: {
	"type": "ServiceDependencyInjected",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ServiceDependencyInjected"
}
[info] [EventBus]: Broadcasted ServiceDependencyInjected: {
	"event": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ServiceDependencyInjected"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query method/create/flow: {
	"funcParams": {
		"actionId": "METHOD_CREATE",
		"label": "Create New Method",
		"callPath": [],
		"flowUrl": "method/create/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query method/create/flow"
}
[info] [CLI] Called Query method/create/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g. getAll",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "(Optional): in csv format e.g. id:number,name:string",
				"type": "multi-input",
				"canBeEmpty": false
			},
			{
				"contextId": "returnType",
				"title": "What does the method return?",
				"type": "multi-option",
				"options": [
					{
						"name": "string"
					},
					{
						"name": "string[]"
					},
					{
						"name": "number"
					},
					{
						"name": "number[]"
					},
					{
						"name": "boolean"
					},
					{
						"name": "boolean[]"
					},
					{
						"name": "void"
					},
					{
						"name": "void[]"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "method/create",
				"payload": {
					"name": "name.value",
					"params": "params.value",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query method/create/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query injectable/inject/flow: {
	"funcParams": {
		"label": "Inject",
		"actionId": "INJECT",
		"callPath": [],
		"flowUrl": "injectable/inject/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/inject/flow"
}
[info] [CLI] Called Query injectable/inject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "injectable",
				"title": "Which entity to inject?",
				"type": "multi-option",
				"options": [
					{
						"file": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
						"name": "SingleService",
						"type": "ANGULAR_SERVICE",
						"dataType": "Internal"
					},
					{
						"id": "httpClient",
						"dataType": "External",
						"name": "HttpClient",
						"type": "HttpClient",
						"relatedTypes": {}
					},
					{
						"id": "activatedRoute",
						"dataType": "External",
						"name": "ActivatedRoute",
						"type": "ActivatedRoute",
						"relatedTypes": {}
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "injectable/inject",
				"payload": {
					"injectingPath": "injectable.file",
					"type": "injectable.type",
					"dataType": "injectable.dataType"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query injectable/inject/flow"
}
[info] [CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"injectingPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
		"type": "ANGULAR_SERVICE",
		"dataType": "Internal"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [EventBus]: Broadcasting event ServiceDependencyInjected: {
	"type": "ServiceDependencyInjected",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ServiceDependencyInjected"
}
[info] [EventBus]: Broadcasted ServiceDependencyInjected: {
	"event": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ServiceDependencyInjected"
}
[info] [CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query injectable/inject/flow: {
	"funcParams": {
		"label": "Inject",
		"actionId": "INJECT",
		"callPath": [],
		"flowUrl": "injectable/inject/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/inject/flow"
}
[info] [CLI] Called Query injectable/inject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "injectable",
				"title": "Which entity to inject?",
				"type": "multi-option",
				"options": [
					{
						"file": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
						"name": "SingleService",
						"type": "ANGULAR_SERVICE",
						"dataType": "Internal"
					},
					{
						"id": "httpClient",
						"dataType": "External",
						"name": "HttpClient",
						"type": "HttpClient",
						"relatedTypes": {}
					},
					{
						"id": "activatedRoute",
						"dataType": "External",
						"name": "ActivatedRoute",
						"type": "ActivatedRoute",
						"relatedTypes": {}
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "injectable/inject",
				"payload": {
					"injectingPath": "injectable.file",
					"type": "injectable.type",
					"dataType": "injectable.dataType"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query injectable/inject/flow"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"type": "HttpClient",
		"dataType": "External"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query injectable/inject/flow: {
	"funcParams": {
		"label": "Inject",
		"actionId": "INJECT",
		"callPath": [],
		"flowUrl": "injectable/inject/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/inject/flow"
}
[info] [CLI] Called Query injectable/inject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "injectable",
				"title": "Which entity to inject?",
				"type": "multi-option",
				"options": [
					{
						"file": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
						"name": "SingleService",
						"type": "ANGULAR_SERVICE",
						"dataType": "Internal"
					},
					{
						"id": "httpClient",
						"dataType": "External",
						"name": "HttpClient",
						"type": "HttpClient",
						"relatedTypes": {}
					},
					{
						"id": "activatedRoute",
						"dataType": "External",
						"name": "ActivatedRoute",
						"type": "ActivatedRoute",
						"relatedTypes": {}
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "injectable/inject",
				"payload": {
					"injectingPath": "injectable.file",
					"type": "injectable.type",
					"dataType": "injectable.dataType"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query injectable/inject/flow"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"type": "HttpClient",
		"dataType": "External"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query method/create/flow: {
	"funcParams": {
		"actionId": "METHOD_CREATE",
		"label": "Create New Method",
		"callPath": [],
		"flowUrl": "method/create/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query method/create/flow"
}
[info] [CLI] Called Query method/create/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g. getAll",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "(Optional): in csv format e.g. id:number,name:string",
				"type": "multi-input",
				"canBeEmpty": false
			},
			{
				"contextId": "returnType",
				"title": "What does the method return?",
				"type": "multi-option",
				"options": [
					{
						"name": "string"
					},
					{
						"name": "string[]"
					},
					{
						"name": "number"
					},
					{
						"name": "number[]"
					},
					{
						"name": "boolean"
					},
					{
						"name": "boolean[]"
					},
					{
						"name": "void"
					},
					{
						"name": "void[]"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "method/create",
				"payload": {
					"name": "name.value",
					"params": "params.value",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query method/create/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query method/create/flow: {
	"funcParams": {
		"actionId": "METHOD_CREATE",
		"label": "Create New Method",
		"callPath": [],
		"flowUrl": "method/create/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query method/create/flow"
}
[info] [CLI] Called Query method/create/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g. getAll",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "(Optional): in csv format e.g. id:number,name:string",
				"type": "multi-input",
				"canBeEmpty": false
			},
			{
				"contextId": "returnType",
				"title": "What does the method return?",
				"type": "multi-option",
				"options": [
					{
						"name": "string"
					},
					{
						"name": "string[]"
					},
					{
						"name": "number"
					},
					{
						"name": "number[]"
					},
					{
						"name": "boolean"
					},
					{
						"name": "boolean[]"
					},
					{
						"name": "void"
					},
					{
						"name": "void[]"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "method/create",
				"payload": {
					"name": "name.value",
					"params": "params.value",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query method/create/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query routing/add-component/flow: {
	"funcParams": {
		"label": "Add Component to Route",
		"actionId": "ADD_COMPONENT_TO_ROUTE",
		"callPath": [],
		"flowUrl": "routing/add-component/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query routing/add-component/flow"
}
[info] [CLI] Called Query routing/add-component/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "app",
				"title": "Which app to use for routing?",
				"type": "multi-option",
				"options": [
					{
						"name": "lowgular-course-entry",
						"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
						"root": "",
						"sourceRoot": "src",
						"prefix": "app",
						"type": "App",
						"codePathFromWorkspaceRoot": "src/app",
						"absoluteCodePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app",
						"absoluteRootPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
						"rootRoutingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app-routing.module.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "route",
				"title": "What is the route name?",
				"subtitle": "e.g. users or users/:userId",
				"type": "text-input",
				"canBeEmpty": true
			}
		],
		"request": {
			"config": {
				"url": "routing/add-component",
				"payload": {
					"appPath": "app.rootRoutingFilePath",
					"routeName": "route.value"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query routing/add-component/flow"
}
[info] [CLI] Calling Command routing/add-component: {
	"funcParams": {
		"appPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "single"
	},
	"level": "info",
	"message": "[CLI] Calling Command routing/add-component"
}
[info] [CommandBus]: Dispatching command AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "single",
		"componentFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"relatedModulePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddRouteCommand"
}
[info] [CommandBus]: Handled  AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "single",
		"componentFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"relatedModulePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddRouteCommand"
}
[info] [CLI] Called Command routing/add-component: {
	"message": "[CLI] Called Command routing/add-component",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query routing/add-component/flow: {
	"funcParams": {
		"label": "Add Component to Route",
		"actionId": "ADD_COMPONENT_TO_ROUTE",
		"callPath": [],
		"flowUrl": "routing/add-component/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query routing/add-component/flow"
}
[info] [CLI] Called Query routing/add-component/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "app",
				"title": "Which app to use for routing?",
				"type": "multi-option",
				"options": [
					{
						"name": "lowgular-course-entry",
						"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
						"root": "",
						"sourceRoot": "src",
						"prefix": "app",
						"type": "App",
						"codePathFromWorkspaceRoot": "src/app",
						"absoluteCodePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app",
						"absoluteRootPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
						"rootRoutingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app-routing.module.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "route",
				"title": "What is the route name?",
				"subtitle": "e.g. users or users/:userId",
				"type": "text-input",
				"canBeEmpty": true
			}
		],
		"request": {
			"config": {
				"url": "routing/add-component",
				"payload": {
					"appPath": "app.rootRoutingFilePath",
					"routeName": "route.value"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query routing/add-component/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/properties/data/flow: {
	"funcParams": {
		"actionId": "RXJS_PROPERTY_CREATE",
		"label": "Create Data Property",
		"callPath": [],
		"flowUrl": "rxjs/properties/data/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/properties/data/flow"
}
[info] [CLI] Called Query rxjs/properties/data/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "SingleComponent",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts"
					},
					{
						"name": "SingleService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					},
					{
						"name": "ActivatedRoute",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/router/router.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"SingleComponent": [],
					"SingleService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					],
					"ActivatedRoute": [
						{
							"name": "url",
							"callPath": [
								"url"
							]
						},
						{
							"name": "params",
							"callPath": [
								"params"
							]
						},
						{
							"name": "queryParams",
							"callPath": [
								"queryParams"
							]
						},
						{
							"name": "fragment",
							"callPath": [
								"fragment"
							]
						},
						{
							"name": "data",
							"callPath": [
								"data"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/data/create",
				"payload": {
					"propertyName": "name.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/properties/data/flow"
}
[info] [CLI] Calling Command rxjs/properties/data/create: {
	"funcParams": {
		"propertyName": "single",
		"dependencyCallPath": [
			"getAll"
		],
		"dependencyName": "SingleService",
		"dependencyPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/properties/data/create"
}
[info] [EventBus]: Broadcasting event ServiceDependencyInjected: {
	"type": "ServiceDependencyInjected",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ServiceDependencyInjected"
}
[info] [CommandBus]: Dispatching command CreateDataPropertyCommand: {
	"commandName": "CreateDataPropertyCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"entityPropertyName": "single",
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
		"dependencyName": "SingleService",
		"dependencyCallPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CreateDataPropertyCommand"
}
[info] [EventBus]: Broadcasted ServiceDependencyInjected: {
	"event": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ServiceDependencyInjected"
}
[info] [CommandBus]: Handled  CreateDataPropertyCommand: {
	"commandName": "CreateDataPropertyCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"entityPropertyName": "single",
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
		"dependencyName": "SingleService",
		"dependencyCallPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CreateDataPropertyCommand"
}
[info] [CLI] Called Command rxjs/properties/data/create: {
	"message": "[CLI] Called Command rxjs/properties/data/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "SingleComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-list/flow: {
	"funcParams": {
		"actionId": "ADD_LIST_TEMPLATE",
		"label": "Display List",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-list/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-list/flow"
}
[info] [CLI] Called Query angular-component/templates/add-list/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "list",
				"title": "Which list template to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "ul",
						"contextVariables": []
					},
					{
						"label": "table",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			},
			{
				"contextId": "data",
				"title": "What data to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "single$",
						"type": "Observable<SingleModel[]>",
						"isReadonly": true,
						"typeProperties": []
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "detail",
				"title": "Which template to use for details?",
				"type": "multi-option",
				"options": [
					{
						"label": "content",
						"contextVariables": []
					},
					{
						"label": "text",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-list",
				"payload": {
					"propertyName": "data.name",
					"listTemplate": "list.label",
					"detailTemplate": "detail.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-list/flow"
}
[info] [CLI] Calling Command angular-component/templates/add-list: {
	"funcParams": {
		"propertyName": "single$",
		"listTemplate": "ul",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-list"
}
[info] [CommandBus]: Dispatching command AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.html",
		"className": "SingleComponent",
		"propertyName": "single$",
		"position": 70,
		"listTemplate": "ul",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddListToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.html",
		"className": "SingleComponent",
		"propertyName": "single$",
		"position": 70,
		"listTemplate": "ul",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddListToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-list: {
	"message": "[CLI] Called Command angular-component/templates/add-list",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app.module.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Calling Query entity/create/flow: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/model"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/create/flow"
}
[info] [CLI] Called Query entity/create/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": [
					{
						"id": "component",
						"suffix": "Component",
						"folder": "ui/$name$",
						"type": "ANGULAR_COMPONENT",
						"insideOf": "App",
						"config": {
							"stylesExtension": "none",
							"viewEncapsulation": "Emulated",
							"selector": "generated",
							"changeDetectionStrategy": "OnPush"
						}
					},
					{
						"id": "dataService",
						"suffix": "Service",
						"folder": "services",
						"type": "ANGULAR_SERVICE",
						"insideOf": "App",
						"config": {
							"provideStrategy": "root"
						}
					},
					{
						"id": "model",
						"suffix": "Model",
						"folder": "model",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					},
					{
						"id": "response",
						"suffix": "Response",
						"folder": "services",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					}
				],
				"extraOptions": [],
				"property": "id",
				"canBeEmpty": false
			}
		],
		"request": {}
	},
	"level": "info",
	"message": "[CLI] Called Query entity/create/flow"
}
[info] [CLI] Calling Query data-structure/create/flow: {
	"funcParams": {
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Query data-structure/create/flow"
}
[info] [CLI] Called Query data-structure/create/flow: {
	"result": {
		"context": {
			"entity": {
				"id": "model"
			}
		},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the model name?",
				"subtitle": "e.g. user",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "properties",
				"title": "What are the model properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input",
				"canBeEmpty": true
			}
		],
		"request": {
			"config": {
				"url": "data-structure/create",
				"payload": {
					"name": "name.value",
					"entityId": "entity.id",
					"properties": "properties.value"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query data-structure/create/flow"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "crypto",
		"entityId": "model",
		"properties": {}
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"name": "crypto",
		"suffix": "Model",
		"properties": {},
		"absoluteFolderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/model"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"name": "crypto",
		"suffix": "Model",
		"properties": {},
		"absoluteFolderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/model"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/create/flow: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/create/flow"
}
[info] [CLI] Called Query entity/create/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": [
					{
						"id": "component",
						"suffix": "Component",
						"folder": "ui/$name$",
						"type": "ANGULAR_COMPONENT",
						"insideOf": "App",
						"config": {
							"stylesExtension": "none",
							"viewEncapsulation": "Emulated",
							"selector": "generated",
							"changeDetectionStrategy": "OnPush"
						}
					},
					{
						"id": "dataService",
						"suffix": "Service",
						"folder": "services",
						"type": "ANGULAR_SERVICE",
						"insideOf": "App",
						"config": {
							"provideStrategy": "root"
						}
					},
					{
						"id": "model",
						"suffix": "Model",
						"folder": "model",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					},
					{
						"id": "response",
						"suffix": "Response",
						"folder": "services",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					}
				],
				"extraOptions": [],
				"property": "id",
				"canBeEmpty": false
			}
		],
		"request": {}
	},
	"level": "info",
	"message": "[CLI] Called Query entity/create/flow"
}
[info] [CLI] Calling Query angular-service/create/flow: {
	"funcParams": {
		"entityId": "dataService"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-service/create/flow"
}
[info] [CLI] Called Query angular-service/create/flow: {
	"result": {
		"context": {
			"entity": {
				"id": "dataService"
			}
		},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the dataService name?",
				"subtitle": "e.g. user",
				"type": "text-input",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-service/create",
				"payload": {
					"name": "name.value",
					"entityId": "entity.id"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-service/create/flow"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "crypto",
		"entityId": "dataService"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services",
		"name": "crypto",
		"suffix": "Service",
		"provideStrategy": "root"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event ServiceCreatedEvent: {
	"type": "ServiceCreatedEvent",
	"payload": {
		"createdFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ServiceCreatedEvent"
}
[info] [EventBus]: Broadcasted ServiceCreatedEvent: {
	"event": {
		"createdFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ServiceCreatedEvent"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services",
		"name": "crypto",
		"suffix": "Service",
		"provideStrategy": "root"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "rxjs/methods/flow"
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query injectable/inject/flow: {
	"funcParams": {
		"label": "Inject",
		"actionId": "INJECT",
		"callPath": [],
		"flowUrl": "injectable/inject/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/inject/flow"
}
[info] [CLI] Called Query injectable/inject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "injectable",
				"title": "Which entity to inject?",
				"type": "multi-option",
				"options": [
					{
						"id": "httpClient",
						"dataType": "External",
						"name": "HttpClient",
						"type": "HttpClient",
						"relatedTypes": {}
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "injectable/inject",
				"payload": {
					"injectingPath": "injectable.file",
					"type": "injectable.type",
					"dataType": "injectable.dataType"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query injectable/inject/flow"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"type": "HttpClient",
		"dataType": "External"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "rxjs/methods/flow"
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": [],
		"flowUrl": "rxjs/methods/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input",
				"canBeEmpty": true
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CryptoModel>"
					},
					{
						"name": "Observable<CryptoModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<SingleModel>"
					},
					{
						"name": "Observable<SingleModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "method/create",
				"payload": {
					"name": "name.value",
					"params": "params.value",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [CLI] Calling Command method/create: {
	"funcParams": {
		"name": "getAll",
		"params": {},
		"returnType": "Observable<CryptoModel[]>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"name": "getAll",
		"params": {},
		"returnType": "Observable<CryptoModel[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"name": "getAll",
		"params": {},
		"returnType": "Observable<CryptoModel[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method/create: {
	"message": "[CLI] Called Command method/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								],
								"flowUrl": "rxjs/methods/statement/flow"
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "rxjs/methods/flow"
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query injectable/inject/flow: {
	"funcParams": {
		"label": "Inject",
		"actionId": "INJECT",
		"callPath": [],
		"flowUrl": "injectable/inject/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/inject/flow"
}
[info] [CLI] Called Query injectable/inject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "injectable",
				"title": "Which entity to inject?",
				"type": "multi-option",
				"options": [
					{
						"id": "httpClient",
						"dataType": "External",
						"name": "HttpClient",
						"type": "HttpClient",
						"relatedTypes": {}
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "injectable/inject",
				"payload": {
					"injectingPath": "injectable.file",
					"type": "injectable.type",
					"dataType": "injectable.dataType"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query injectable/inject/flow"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"type": "HttpClient",
		"dataType": "External"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								],
								"flowUrl": "rxjs/methods/statement/flow"
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "rxjs/methods/flow"
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getAll"
		],
		"flowUrl": "rxjs/methods/statement/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "CryptoService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"CryptoService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"getAll"
		],
		"dependencyCallPath": [
			"getAll"
		],
		"dependencyType": "CryptoService",
		"dependencyPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"dependencyType": "CryptoService",
		"dependencyCallPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"dependencyType": "CryptoService",
		"dependencyCallPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								],
								"flowUrl": "rxjs/methods/statement/flow"
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "rxjs/methods/flow"
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getAll"
		],
		"flowUrl": "rxjs/methods/statement/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "CryptoService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"CryptoService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"getAll"
		],
		"dependencyCallPath": [
			"get"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [EventBus]: Broadcasting event ServiceDependencyInjected: {
	"type": "ServiceDependencyInjected",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ServiceDependencyInjected"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [EventBus]: Broadcasted ServiceDependencyInjected: {
	"event": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ServiceDependencyInjected"
}
[info] [CLI] Calling Query entity/create/flow: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/create/flow"
}
[info] [CLI] Called Query entity/create/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": [
					{
						"id": "component",
						"suffix": "Component",
						"folder": "ui/$name$",
						"type": "ANGULAR_COMPONENT",
						"insideOf": "App",
						"config": {
							"stylesExtension": "none",
							"viewEncapsulation": "Emulated",
							"selector": "generated",
							"changeDetectionStrategy": "OnPush"
						}
					},
					{
						"id": "dataService",
						"suffix": "Service",
						"folder": "services",
						"type": "ANGULAR_SERVICE",
						"insideOf": "App",
						"config": {
							"provideStrategy": "root"
						}
					},
					{
						"id": "model",
						"suffix": "Model",
						"folder": "model",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					},
					{
						"id": "response",
						"suffix": "Response",
						"folder": "services",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					}
				],
				"extraOptions": [],
				"property": "id",
				"canBeEmpty": false
			}
		],
		"request": {}
	},
	"level": "info",
	"message": "[CLI] Called Query entity/create/flow"
}
[info] [CLI] Calling Query angular-component/create/flow: {
	"funcParams": {
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/create/flow"
}
[info] [CLI] Called Query angular-component/create/flow: {
	"result": {
		"context": {
			"entity": {
				"id": "component"
			}
		},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the component name?",
				"subtitle": "e.g. user",
				"type": "text-input",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/create",
				"payload": {
					"name": "name.value",
					"entityId": "entity.id"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/create/flow"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "crypto",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "crypto",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "crypto",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query injectable/inject/flow: {
	"funcParams": {
		"label": "Inject",
		"actionId": "INJECT",
		"callPath": [],
		"flowUrl": "injectable/inject/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/inject/flow"
}
[info] [CLI] Called Query injectable/inject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "injectable",
				"title": "Which entity to inject?",
				"type": "multi-option",
				"options": [
					{
						"file": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
						"name": "CryptoService",
						"type": "ANGULAR_SERVICE",
						"dataType": "Internal"
					},
					{
						"file": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
						"name": "SingleService",
						"type": "ANGULAR_SERVICE",
						"dataType": "Internal"
					},
					{
						"id": "httpClient",
						"dataType": "External",
						"name": "HttpClient",
						"type": "HttpClient",
						"relatedTypes": {}
					},
					{
						"id": "activatedRoute",
						"dataType": "External",
						"name": "ActivatedRoute",
						"type": "ActivatedRoute",
						"relatedTypes": {}
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "injectable/inject",
				"payload": {
					"injectingPath": "injectable.file",
					"type": "injectable.type",
					"dataType": "injectable.dataType"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query injectable/inject/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query injectable/inject/flow: {
	"funcParams": {
		"label": "Inject",
		"actionId": "INJECT",
		"callPath": [],
		"flowUrl": "injectable/inject/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/inject/flow"
}
[info] [CLI] Called Query injectable/inject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "injectable",
				"title": "Which entity to inject?",
				"type": "multi-option",
				"options": [
					{
						"file": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
						"name": "CryptoService",
						"type": "ANGULAR_SERVICE",
						"dataType": "Internal"
					},
					{
						"file": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
						"name": "SingleService",
						"type": "ANGULAR_SERVICE",
						"dataType": "Internal"
					},
					{
						"id": "httpClient",
						"dataType": "External",
						"name": "HttpClient",
						"type": "HttpClient",
						"relatedTypes": {}
					},
					{
						"id": "activatedRoute",
						"dataType": "External",
						"name": "ActivatedRoute",
						"type": "ActivatedRoute",
						"relatedTypes": {}
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "injectable/inject",
				"payload": {
					"injectingPath": "injectable.file",
					"type": "injectable.type",
					"dataType": "injectable.dataType"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query injectable/inject/flow"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"type": "HttpClient",
		"dataType": "External"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query method/create/flow: {
	"funcParams": {
		"actionId": "METHOD_CREATE",
		"label": "Create New Method",
		"callPath": [],
		"flowUrl": "method/create/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query method/create/flow"
}
[info] [CLI] Called Query method/create/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g. getAll",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "(Optional): in csv format e.g. id:number,name:string",
				"type": "multi-input",
				"canBeEmpty": false
			},
			{
				"contextId": "returnType",
				"title": "What does the method return?",
				"type": "multi-option",
				"options": [
					{
						"name": "string"
					},
					{
						"name": "string[]"
					},
					{
						"name": "number"
					},
					{
						"name": "number[]"
					},
					{
						"name": "boolean"
					},
					{
						"name": "boolean[]"
					},
					{
						"name": "void"
					},
					{
						"name": "void[]"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "method/create",
				"payload": {
					"name": "name.value",
					"params": "params.value",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query method/create/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/properties/data/flow: {
	"funcParams": {
		"actionId": "RXJS_PROPERTY_CREATE",
		"label": "Create Data Property",
		"callPath": [],
		"flowUrl": "rxjs/properties/data/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/properties/data/flow"
}
[info] [CLI] Called Query rxjs/properties/data/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "CryptoComponent",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts"
					},
					{
						"name": "CryptoService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
					},
					{
						"name": "SingleService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					},
					{
						"name": "ActivatedRoute",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/router/router.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"CryptoComponent": [],
					"CryptoService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"SingleService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					],
					"ActivatedRoute": [
						{
							"name": "url",
							"callPath": [
								"url"
							]
						},
						{
							"name": "params",
							"callPath": [
								"params"
							]
						},
						{
							"name": "queryParams",
							"callPath": [
								"queryParams"
							]
						},
						{
							"name": "fragment",
							"callPath": [
								"fragment"
							]
						},
						{
							"name": "data",
							"callPath": [
								"data"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/data/create",
				"payload": {
					"propertyName": "name.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/properties/data/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query routing/add-component/flow: {
	"funcParams": {
		"label": "Add Component to Route",
		"actionId": "ADD_COMPONENT_TO_ROUTE",
		"callPath": [],
		"flowUrl": "routing/add-component/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query routing/add-component/flow"
}
[info] [CLI] Called Query routing/add-component/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "app",
				"title": "Which app to use for routing?",
				"type": "multi-option",
				"options": [
					{
						"name": "lowgular-course-entry",
						"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
						"root": "",
						"sourceRoot": "src",
						"prefix": "app",
						"type": "App",
						"codePathFromWorkspaceRoot": "src/app",
						"absoluteCodePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app",
						"absoluteRootPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
						"rootRoutingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app-routing.module.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "route",
				"title": "What is the route name?",
				"subtitle": "e.g. users or users/:userId",
				"type": "text-input",
				"canBeEmpty": true
			}
		],
		"request": {
			"config": {
				"url": "routing/add-component",
				"payload": {
					"appPath": "app.rootRoutingFilePath",
					"routeName": "route.value"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query routing/add-component/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query routing/add-component/flow: {
	"funcParams": {
		"label": "Add Component to Route",
		"actionId": "ADD_COMPONENT_TO_ROUTE",
		"callPath": [],
		"flowUrl": "routing/add-component/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query routing/add-component/flow"
}
[info] [CLI] Called Query routing/add-component/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "app",
				"title": "Which app to use for routing?",
				"type": "multi-option",
				"options": [
					{
						"name": "lowgular-course-entry",
						"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
						"root": "",
						"sourceRoot": "src",
						"prefix": "app",
						"type": "App",
						"codePathFromWorkspaceRoot": "src/app",
						"absoluteCodePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app",
						"absoluteRootPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
						"rootRoutingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app-routing.module.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "route",
				"title": "What is the route name?",
				"subtitle": "e.g. users or users/:userId",
				"type": "text-input",
				"canBeEmpty": true
			}
		],
		"request": {
			"config": {
				"url": "routing/add-component",
				"payload": {
					"appPath": "app.rootRoutingFilePath",
					"routeName": "route.value"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query routing/add-component/flow"
}
[info] [CLI] Calling Command routing/add-component: {
	"funcParams": {
		"appPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "crypto"
	},
	"level": "info",
	"message": "[CLI] Calling Command routing/add-component"
}
[info] [CommandBus]: Dispatching command AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "crypto",
		"componentFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"relatedModulePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddRouteCommand"
}
[info] [CommandBus]: Handled  AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "crypto",
		"componentFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"relatedModulePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddRouteCommand"
}
[info] [CLI] Called Command routing/add-component: {
	"message": "[CLI] Called Command routing/add-component",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/properties/data/flow: {
	"funcParams": {
		"actionId": "RXJS_PROPERTY_CREATE",
		"label": "Create Data Property",
		"callPath": [],
		"flowUrl": "rxjs/properties/data/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/properties/data/flow"
}
[info] [CLI] Called Query rxjs/properties/data/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "CryptoComponent",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts"
					},
					{
						"name": "CryptoService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
					},
					{
						"name": "SingleService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					},
					{
						"name": "ActivatedRoute",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/router/router.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"CryptoComponent": [],
					"CryptoService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"SingleService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					],
					"ActivatedRoute": [
						{
							"name": "url",
							"callPath": [
								"url"
							]
						},
						{
							"name": "params",
							"callPath": [
								"params"
							]
						},
						{
							"name": "queryParams",
							"callPath": [
								"queryParams"
							]
						},
						{
							"name": "fragment",
							"callPath": [
								"fragment"
							]
						},
						{
							"name": "data",
							"callPath": [
								"data"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/data/create",
				"payload": {
					"propertyName": "name.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/properties/data/flow"
}
[info] [CLI] Calling Command rxjs/properties/data/create: {
	"funcParams": {
		"propertyName": "crypto",
		"dependencyCallPath": [
			"getAll"
		],
		"dependencyName": "CryptoService",
		"dependencyPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/properties/data/create"
}
[info] [EventBus]: Broadcasting event ServiceDependencyInjected: {
	"type": "ServiceDependencyInjected",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ServiceDependencyInjected"
}
[info] [CommandBus]: Dispatching command CreateDataPropertyCommand: {
	"commandName": "CreateDataPropertyCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"entityPropertyName": "crypto",
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"dependencyName": "CryptoService",
		"dependencyCallPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CreateDataPropertyCommand"
}
[info] [CLI] Called Command rxjs/properties/data/create: {
	"message": "[CLI] Called Command rxjs/properties/data/create",
	"level": "info"
}
[info] [EventBus]: Broadcasted ServiceDependencyInjected: {
	"event": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ServiceDependencyInjected"
}
[info] [CommandBus]: Handled  CreateDataPropertyCommand: {
	"commandName": "CreateDataPropertyCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"entityPropertyName": "crypto",
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"dependencyName": "CryptoService",
		"dependencyCallPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CreateDataPropertyCommand"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CryptoComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-list/flow: {
	"funcParams": {
		"actionId": "ADD_LIST_TEMPLATE",
		"label": "Display List",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-list/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-list/flow"
}
[info] [CLI] Called Query angular-component/templates/add-list/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "list",
				"title": "Which list template to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "ul",
						"contextVariables": []
					},
					{
						"label": "table",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			},
			{
				"contextId": "data",
				"title": "What data to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "crypto$",
						"type": "Observable<CryptoModel[]>",
						"isReadonly": true,
						"typeProperties": []
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "detail",
				"title": "Which template to use for details?",
				"type": "multi-option",
				"options": [
					{
						"label": "content",
						"contextVariables": []
					},
					{
						"label": "text",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-list",
				"payload": {
					"propertyName": "data.name",
					"listTemplate": "list.label",
					"detailTemplate": "detail.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-list/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CryptoComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-list/flow: {
	"funcParams": {
		"actionId": "ADD_LIST_TEMPLATE",
		"label": "Display List",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-list/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-list/flow"
}
[info] [CLI] Called Query angular-component/templates/add-list/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "list",
				"title": "Which list template to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "ul",
						"contextVariables": []
					},
					{
						"label": "table",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			},
			{
				"contextId": "data",
				"title": "What data to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "crypto$",
						"type": "Observable<CryptoModel[]>",
						"isReadonly": true,
						"typeProperties": []
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "detail",
				"title": "Which template to use for details?",
				"type": "multi-option",
				"options": [
					{
						"label": "content",
						"contextVariables": []
					},
					{
						"label": "text",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-list",
				"payload": {
					"propertyName": "data.name",
					"listTemplate": "list.label",
					"detailTemplate": "detail.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-list/flow"
}
[info] [CLI] Calling Command angular-component/templates/add-list: {
	"funcParams": {
		"propertyName": "crypto$",
		"listTemplate": "ul",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-list"
}
[info] [CommandBus]: Dispatching command AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.html",
		"className": "CryptoComponent",
		"propertyName": "crypto$",
		"position": 0,
		"listTemplate": "ul",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddListToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.html",
		"className": "CryptoComponent",
		"propertyName": "crypto$",
		"position": 0,
		"listTemplate": "ul",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddListToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-list: {
	"message": "[CLI] Called Command angular-component/templates/add-list",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CryptoComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-list/flow: {
	"funcParams": {
		"actionId": "ADD_LIST_TEMPLATE",
		"label": "Display List",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-list/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-list/flow"
}
[info] [CLI] Called Query angular-component/templates/add-list/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "list",
				"title": "Which list template to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "ul",
						"contextVariables": []
					},
					{
						"label": "table",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			},
			{
				"contextId": "data",
				"title": "What data to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "crypto$",
						"type": "Observable<CryptoModel[]>",
						"isReadonly": true,
						"typeProperties": []
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "detail",
				"title": "Which template to use for details?",
				"type": "multi-option",
				"options": [
					{
						"label": "content",
						"contextVariables": []
					},
					{
						"label": "text",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-list",
				"payload": {
					"propertyName": "data.name",
					"listTemplate": "list.label",
					"detailTemplate": "detail.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-list/flow"
}
[info] [CLI] Calling Command angular-component/templates/add-list: {
	"funcParams": {
		"propertyName": "crypto$",
		"listTemplate": "ul",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-list"
}
[info] [CommandBus]: Dispatching command AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.html",
		"className": "CryptoComponent",
		"propertyName": "crypto$",
		"position": 16,
		"listTemplate": "ul",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddListToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Handled  AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.html",
		"className": "CryptoComponent",
		"propertyName": "crypto$",
		"position": 16,
		"listTemplate": "ul",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddListToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-list: {
	"message": "[CLI] Called Command angular-component/templates/add-list",
	"level": "info"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CryptoComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-list/flow: {
	"funcParams": {
		"actionId": "ADD_LIST_TEMPLATE",
		"label": "Display List",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-list/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-list/flow"
}
[info] [CLI] Called Query angular-component/templates/add-list/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "list",
				"title": "Which list template to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "ul",
						"contextVariables": []
					},
					{
						"label": "table",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			},
			{
				"contextId": "data",
				"title": "What data to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "crypto$",
						"type": "Observable<CryptoModel[]>",
						"isReadonly": true,
						"typeProperties": [
							"title",
							"price",
							"symbol"
						]
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "detail",
				"title": "Which template to use for details?",
				"type": "multi-option",
				"options": [
					{
						"label": "content",
						"contextVariables": []
					},
					{
						"label": "text",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-list",
				"payload": {
					"propertyName": "data.name",
					"listTemplate": "list.label",
					"detailTemplate": "detail.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-list/flow"
}
[info] [CommandBus]: Dispatching command AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.html",
		"className": "CryptoComponent",
		"propertyName": "crypto$",
		"position": 15,
		"listTemplate": "table",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddListToTemplateCommand"
}
[info] [CLI] Calling Command angular-component/templates/add-list: {
	"funcParams": {
		"propertyName": "crypto$",
		"listTemplate": "table",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-list"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Handled  AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.html",
		"className": "CryptoComponent",
		"propertyName": "crypto$",
		"position": 15,
		"listTemplate": "table",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddListToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-list: {
	"message": "[CLI] Called Command angular-component/templates/add-list",
	"level": "info"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CryptoComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-list/flow: {
	"funcParams": {
		"actionId": "ADD_LIST_TEMPLATE",
		"label": "Display List",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-list/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-list/flow"
}
[info] [CLI] Called Query angular-component/templates/add-list/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "list",
				"title": "Which list template to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "ul",
						"contextVariables": []
					},
					{
						"label": "table",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			},
			{
				"contextId": "data",
				"title": "What data to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "crypto$",
						"type": "Observable<CryptoModel[]>",
						"isReadonly": true,
						"typeProperties": [
							"title",
							"price",
							"symbol"
						]
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "detail",
				"title": "Which template to use for details?",
				"type": "multi-option",
				"options": [
					{
						"label": "content",
						"contextVariables": []
					},
					{
						"label": "text",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-list",
				"payload": {
					"propertyName": "data.name",
					"listTemplate": "list.label",
					"detailTemplate": "detail.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-list/flow"
}
[info] [CLI] Calling Command angular-component/templates/add-list: {
	"funcParams": {
		"propertyName": "crypto$",
		"listTemplate": "ul",
		"detailTemplate": "text"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-list"
}
[info] [CommandBus]: Dispatching command AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.html",
		"className": "CryptoComponent",
		"propertyName": "crypto$",
		"position": 23,
		"listTemplate": "ul",
		"detailTemplate": "text"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddListToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Handled  AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.html",
		"className": "CryptoComponent",
		"propertyName": "crypto$",
		"position": 23,
		"listTemplate": "ul",
		"detailTemplate": "text"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddListToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-list: {
	"message": "[CLI] Called Command angular-component/templates/add-list",
	"level": "info"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [CLI] Calling Query entity/create/flow: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/model"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/create/flow"
}
[info] [CLI] Called Query entity/create/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": [
					{
						"id": "component",
						"suffix": "Component",
						"folder": "ui/$name$",
						"type": "ANGULAR_COMPONENT",
						"insideOf": "App",
						"config": {
							"stylesExtension": "none",
							"viewEncapsulation": "Emulated",
							"selector": "generated",
							"changeDetectionStrategy": "OnPush"
						}
					},
					{
						"id": "dataService",
						"suffix": "Service",
						"folder": "services",
						"type": "ANGULAR_SERVICE",
						"insideOf": "App",
						"config": {
							"provideStrategy": "root"
						}
					},
					{
						"id": "model",
						"suffix": "Model",
						"folder": "model",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					},
					{
						"id": "response",
						"suffix": "Response",
						"folder": "services",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					}
				],
				"extraOptions": [],
				"property": "id",
				"canBeEmpty": false
			}
		],
		"request": {}
	},
	"level": "info",
	"message": "[CLI] Called Query entity/create/flow"
}
[info] [CLI] Calling Query data-structure/create/flow: {
	"funcParams": {
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Query data-structure/create/flow"
}
[info] [CLI] Called Query data-structure/create/flow: {
	"result": {
		"context": {
			"entity": {
				"id": "model"
			}
		},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the model name?",
				"subtitle": "e.g. user",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "properties",
				"title": "What are the model properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input",
				"canBeEmpty": true
			}
		],
		"request": {
			"config": {
				"url": "data-structure/create",
				"payload": {
					"name": "name.value",
					"entityId": "entity.id",
					"properties": "properties.value"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query data-structure/create/flow"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "checkbox-categories",
		"entityId": "model",
		"properties": {
			"title": "string",
			"name": "string"
		}
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"name": "checkbox-categories",
		"suffix": "Model",
		"properties": {
			"title": "string",
			"name": "string"
		},
		"absoluteFolderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/model"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"name": "checkbox-categories",
		"suffix": "Model",
		"properties": {
			"title": "string",
			"name": "string"
		},
		"absoluteFolderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/model"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/create/flow: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/create/flow"
}
[info] [CLI] Called Query entity/create/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": [
					{
						"id": "component",
						"suffix": "Component",
						"folder": "ui/$name$",
						"type": "ANGULAR_COMPONENT",
						"insideOf": "App",
						"config": {
							"stylesExtension": "none",
							"viewEncapsulation": "Emulated",
							"selector": "generated",
							"changeDetectionStrategy": "OnPush"
						}
					},
					{
						"id": "dataService",
						"suffix": "Service",
						"folder": "services",
						"type": "ANGULAR_SERVICE",
						"insideOf": "App",
						"config": {
							"provideStrategy": "root"
						}
					},
					{
						"id": "model",
						"suffix": "Model",
						"folder": "model",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					},
					{
						"id": "response",
						"suffix": "Response",
						"folder": "services",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					}
				],
				"extraOptions": [],
				"property": "id",
				"canBeEmpty": false
			}
		],
		"request": {}
	},
	"level": "info",
	"message": "[CLI] Called Query entity/create/flow"
}
[info] [CLI] Calling Query angular-service/create/flow: {
	"funcParams": {
		"entityId": "dataService"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-service/create/flow"
}
[info] [CLI] Called Query angular-service/create/flow: {
	"result": {
		"context": {
			"entity": {
				"id": "dataService"
			}
		},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the dataService name?",
				"subtitle": "e.g. user",
				"type": "text-input",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-service/create",
				"payload": {
					"name": "name.value",
					"entityId": "entity.id"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-service/create/flow"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "checkbox-categories",
		"entityId": "dataService"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services",
		"name": "checkbox-categories",
		"suffix": "Service",
		"provideStrategy": "root"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event ServiceCreatedEvent: {
	"type": "ServiceCreatedEvent",
	"payload": {
		"createdFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ServiceCreatedEvent"
}
[info] [EventBus]: Broadcasted ServiceCreatedEvent: {
	"event": {
		"createdFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ServiceCreatedEvent"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services",
		"name": "checkbox-categories",
		"suffix": "Service",
		"provideStrategy": "root"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "rxjs/methods/flow"
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": [],
		"flowUrl": "rxjs/methods/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input",
				"canBeEmpty": true
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CheckboxCategoriesModel>"
					},
					{
						"name": "Observable<CheckboxCategoriesModel[]>"
					},
					{
						"name": "Observable<CryptoModel>"
					},
					{
						"name": "Observable<CryptoModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<SingleModel>"
					},
					{
						"name": "Observable<SingleModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "method/create",
				"payload": {
					"name": "name.value",
					"params": "params.value",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [CLI] Calling Command method/create: {
	"funcParams": {
		"name": "getAll",
		"params": {},
		"returnType": "Observable<CheckboxCategoriesModel[]>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts",
		"name": "getAll",
		"params": {},
		"returnType": "Observable<CheckboxCategoriesModel[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts",
		"name": "getAll",
		"params": {},
		"returnType": "Observable<CheckboxCategoriesModel[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method/create: {
	"message": "[CLI] Called Command method/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								],
								"flowUrl": "rxjs/methods/statement/flow"
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "rxjs/methods/flow"
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getAll"
		],
		"flowUrl": "rxjs/methods/statement/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "CheckboxCategoriesService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"CheckboxCategoriesService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"getAll"
		],
		"dependencyCallPath": [
			"getAll"
		],
		"dependencyType": "CheckboxCategoriesService",
		"dependencyPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts",
		"dependencyType": "CheckboxCategoriesService",
		"dependencyCallPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts",
		"dependencyType": "CheckboxCategoriesService",
		"dependencyCallPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								],
								"flowUrl": "rxjs/methods/statement/flow"
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "rxjs/methods/flow"
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getAll"
		],
		"flowUrl": "rxjs/methods/statement/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "CheckboxCategoriesService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"CheckboxCategoriesService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"getAll"
		],
		"dependencyCallPath": [
			"get"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [EventBus]: Broadcasting event ServiceDependencyInjected: {
	"type": "ServiceDependencyInjected",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ServiceDependencyInjected"
}
[info] [EventBus]: Broadcasted ServiceDependencyInjected: {
	"event": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ServiceDependencyInjected"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/create/flow: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/create/flow"
}
[info] [CLI] Called Query entity/create/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": [
					{
						"id": "component",
						"suffix": "Component",
						"folder": "ui/$name$",
						"type": "ANGULAR_COMPONENT",
						"insideOf": "App",
						"config": {
							"stylesExtension": "none",
							"viewEncapsulation": "Emulated",
							"selector": "generated",
							"changeDetectionStrategy": "OnPush"
						}
					},
					{
						"id": "dataService",
						"suffix": "Service",
						"folder": "services",
						"type": "ANGULAR_SERVICE",
						"insideOf": "App",
						"config": {
							"provideStrategy": "root"
						}
					},
					{
						"id": "model",
						"suffix": "Model",
						"folder": "model",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					},
					{
						"id": "response",
						"suffix": "Response",
						"folder": "services",
						"type": "DATA_STRUCTURE",
						"insideOf": "App"
					}
				],
				"extraOptions": [],
				"property": "id",
				"canBeEmpty": false
			}
		],
		"request": {}
	},
	"level": "info",
	"message": "[CLI] Called Query entity/create/flow"
}
[info] [CLI] Calling Query angular-component/create/flow: {
	"funcParams": {
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/create/flow"
}
[info] [CLI] Called Query angular-component/create/flow: {
	"result": {
		"context": {
			"entity": {
				"id": "component"
			}
		},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the component name?",
				"subtitle": "e.g. user",
				"type": "text-input",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/create",
				"payload": {
					"name": "name.value",
					"entityId": "entity.id"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/create/flow"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "checkbox-categories",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "checkbox-categories",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "checkbox-categories",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/properties/data/flow: {
	"funcParams": {
		"actionId": "RXJS_PROPERTY_CREATE",
		"label": "Create Data Property",
		"callPath": [],
		"flowUrl": "rxjs/properties/data/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/properties/data/flow"
}
[info] [CLI] Called Query rxjs/properties/data/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "CheckboxCategoriesComponent",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts"
					},
					{
						"name": "CheckboxCategoriesService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
					},
					{
						"name": "CryptoService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
					},
					{
						"name": "SingleService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					},
					{
						"name": "ActivatedRoute",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/router/router.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"CheckboxCategoriesComponent": [],
					"CheckboxCategoriesService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"CryptoService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"SingleService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					],
					"ActivatedRoute": [
						{
							"name": "url",
							"callPath": [
								"url"
							]
						},
						{
							"name": "params",
							"callPath": [
								"params"
							]
						},
						{
							"name": "queryParams",
							"callPath": [
								"queryParams"
							]
						},
						{
							"name": "fragment",
							"callPath": [
								"fragment"
							]
						},
						{
							"name": "data",
							"callPath": [
								"data"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/data/create",
				"payload": {
					"propertyName": "name.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/properties/data/flow"
}
[info] [CommandBus]: Dispatching command CreateDataPropertyCommand: {
	"commandName": "CreateDataPropertyCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"entityPropertyName": "checkbox-categories",
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyName": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CreateDataPropertyCommand"
}
[info] [CLI] Calling Command rxjs/properties/data/create: {
	"funcParams": {
		"propertyName": "checkbox-categories",
		"dependencyCallPath": [
			"get"
		],
		"dependencyName": "HttpClient",
		"dependencyPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/properties/data/create"
}
[error] [CommandBus]: Error CreateDataPropertyCommand: {
	"commandName": "CreateDataPropertyCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"entityPropertyName": "checkbox-categories",
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyName": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"error": {
		"filePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"oldText": "import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox-categories',\n  templateUrl: './checkbox-categories.component.html',\n  encapsulation: ViewEncapsulation.Emulated,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CheckboxCategoriesComponent {\n  constructor(private _httpClient: HttpClient) {\n  }\n}\n",
		"newText": "import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox-categories',\n  templateUrl: './checkbox-categories.component.html',\n  encapsulation: ViewEncapsulation.Emulated,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CheckboxCategoriesComponent {\n  readonly checkbox-categories$: Observable<ArrayBuffer> = this._httpClient.get(undefined, undefined);\n\n  constructor(private _httpClient: HttpClient) {\n  }\n}\n"
	},
	"level": "error",
	"message": "[CommandBus]: Error CreateDataPropertyCommand"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query routing/add-component/flow: {
	"funcParams": {
		"label": "Add Component to Route",
		"actionId": "ADD_COMPONENT_TO_ROUTE",
		"callPath": [],
		"flowUrl": "routing/add-component/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query routing/add-component/flow"
}
[info] [CLI] Called Query routing/add-component/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "app",
				"title": "Which app to use for routing?",
				"type": "multi-option",
				"options": [
					{
						"name": "lowgular-course-entry",
						"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
						"root": "",
						"sourceRoot": "src",
						"prefix": "app",
						"type": "App",
						"codePathFromWorkspaceRoot": "src/app",
						"absoluteCodePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app",
						"absoluteRootPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
						"rootRoutingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app-routing.module.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "route",
				"title": "What is the route name?",
				"subtitle": "e.g. users or users/:userId",
				"type": "text-input",
				"canBeEmpty": true
			}
		],
		"request": {
			"config": {
				"url": "routing/add-component",
				"payload": {
					"appPath": "app.rootRoutingFilePath",
					"routeName": "route.value"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query routing/add-component/flow"
}
[info] [CLI] Calling Command routing/add-component: {
	"funcParams": {
		"appPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "checkbox"
	},
	"level": "info",
	"message": "[CLI] Calling Command routing/add-component"
}
[info] [CommandBus]: Dispatching command AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "checkbox",
		"componentFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"relatedModulePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddRouteCommand"
}
[info] [CommandBus]: Handled  AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "checkbox",
		"componentFile": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"relatedModulePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddRouteCommand"
}
[info] [CLI] Called Command routing/add-component: {
	"message": "[CLI] Called Command routing/add-component",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query injectable/inject/flow: {
	"funcParams": {
		"label": "Inject",
		"actionId": "INJECT",
		"callPath": [],
		"flowUrl": "injectable/inject/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/inject/flow"
}
[info] [CLI] Called Query injectable/inject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "injectable",
				"title": "Which entity to inject?",
				"type": "multi-option",
				"options": [
					{
						"file": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts",
						"name": "CheckboxCategoriesService",
						"type": "ANGULAR_SERVICE",
						"dataType": "Internal"
					},
					{
						"file": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
						"name": "CryptoService",
						"type": "ANGULAR_SERVICE",
						"dataType": "Internal"
					},
					{
						"file": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
						"name": "SingleService",
						"type": "ANGULAR_SERVICE",
						"dataType": "Internal"
					},
					{
						"id": "httpClient",
						"dataType": "External",
						"name": "HttpClient",
						"type": "HttpClient",
						"relatedTypes": {}
					},
					{
						"id": "activatedRoute",
						"dataType": "External",
						"name": "ActivatedRoute",
						"type": "ActivatedRoute",
						"relatedTypes": {}
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "injectable/inject",
				"payload": {
					"injectingPath": "injectable.file",
					"type": "injectable.type",
					"dataType": "injectable.dataType"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query injectable/inject/flow"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"injectingPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts",
		"type": "ANGULAR_SERVICE",
		"dataType": "Internal"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY"
}
[info] [EventBus]: Broadcasting event ServiceDependencyInjected: {
	"type": "ServiceDependencyInjected",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ServiceDependencyInjected"
}
[info] [EventBus]: Broadcasted ServiceDependencyInjected: {
	"event": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ServiceDependencyInjected"
}
[info] [CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/properties/data/flow: {
	"funcParams": {
		"actionId": "RXJS_PROPERTY_CREATE",
		"label": "Create Data Property",
		"callPath": [],
		"flowUrl": "rxjs/properties/data/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/properties/data/flow"
}
[info] [CLI] Called Query rxjs/properties/data/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "CheckboxCategoriesComponent",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts"
					},
					{
						"name": "CheckboxCategoriesService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
					},
					{
						"name": "CryptoService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
					},
					{
						"name": "SingleService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					},
					{
						"name": "ActivatedRoute",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/router/router.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"CheckboxCategoriesComponent": [],
					"CheckboxCategoriesService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"CryptoService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"SingleService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					],
					"ActivatedRoute": [
						{
							"name": "url",
							"callPath": [
								"url"
							]
						},
						{
							"name": "params",
							"callPath": [
								"params"
							]
						},
						{
							"name": "queryParams",
							"callPath": [
								"queryParams"
							]
						},
						{
							"name": "fragment",
							"callPath": [
								"fragment"
							]
						},
						{
							"name": "data",
							"callPath": [
								"data"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/data/create",
				"payload": {
					"propertyName": "name.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/properties/data/flow"
}
[info] [CommandBus]: Dispatching command CreateDataPropertyCommand: {
	"commandName": "CreateDataPropertyCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"entityPropertyName": "checkbox-categories",
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"dependencyName": "CryptoService",
		"dependencyCallPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CreateDataPropertyCommand"
}
[info] [CLI] Calling Command rxjs/properties/data/create: {
	"funcParams": {
		"propertyName": "checkbox-categories",
		"dependencyCallPath": [
			"getAll"
		],
		"dependencyName": "CryptoService",
		"dependencyPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/properties/data/create"
}
[error] [CommandBus]: Error CreateDataPropertyCommand: {
	"commandName": "CreateDataPropertyCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"entityPropertyName": "checkbox-categories",
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
		"dependencyName": "CryptoService",
		"dependencyCallPath": [
			"getAll"
		]
	},
	"error": {
		"filePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"oldText": "import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { CheckboxCategoriesService } from '../../services/checkbox-categories.service';\n\n@Component({\n  selector: 'app-checkbox-categories',\n  templateUrl: './checkbox-categories.component.html',\n  encapsulation: ViewEncapsulation.Emulated,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CheckboxCategoriesComponent {\n  constructor(private _checkboxCategoriesService: CheckboxCategoriesService, private _cryptoService: CryptoService) {\n  }\n}\n",
		"newText": "import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { CheckboxCategoriesService } from '../../services/checkbox-categories.service';\n\n@Component({\n  selector: 'app-checkbox-categories',\n  templateUrl: './checkbox-categories.component.html',\n  encapsulation: ViewEncapsulation.Emulated,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CheckboxCategoriesComponent {\n  readonly checkbox-categories$: Observable<CryptoModel[]> = this._cryptoService.getAll();\n\n  constructor(private _checkboxCategoriesService: CheckboxCategoriesService, private _cryptoService: CryptoService) {\n  }\n}\n"
	},
	"level": "error",
	"message": "[CommandBus]: Error CreateDataPropertyCommand"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query injectable/inject/flow: {
	"funcParams": {
		"label": "Inject",
		"actionId": "INJECT",
		"callPath": [],
		"flowUrl": "injectable/inject/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/inject/flow"
}
[info] [CLI] Called Query injectable/inject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "injectable",
				"title": "Which entity to inject?",
				"type": "multi-option",
				"options": [
					{
						"file": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts",
						"name": "CryptoService",
						"type": "ANGULAR_SERVICE",
						"dataType": "Internal"
					},
					{
						"file": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts",
						"name": "SingleService",
						"type": "ANGULAR_SERVICE",
						"dataType": "Internal"
					},
					{
						"id": "httpClient",
						"dataType": "External",
						"name": "HttpClient",
						"type": "HttpClient",
						"relatedTypes": {}
					},
					{
						"id": "activatedRoute",
						"dataType": "External",
						"name": "ActivatedRoute",
						"type": "ActivatedRoute",
						"relatedTypes": {}
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "injectable/inject",
				"payload": {
					"injectingPath": "injectable.file",
					"type": "injectable.type",
					"dataType": "injectable.dataType"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query injectable/inject/flow"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"type": "HttpClient",
		"dataType": "External"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/properties/data/flow: {
	"funcParams": {
		"actionId": "RXJS_PROPERTY_CREATE",
		"label": "Create Data Property",
		"callPath": [],
		"flowUrl": "rxjs/properties/data/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/properties/data/flow"
}
[info] [CLI] Called Query rxjs/properties/data/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "CheckboxCategoriesComponent",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts"
					},
					{
						"name": "CheckboxCategoriesService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
					},
					{
						"name": "CryptoService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
					},
					{
						"name": "SingleService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					},
					{
						"name": "ActivatedRoute",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/router/router.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"CheckboxCategoriesComponent": [],
					"CheckboxCategoriesService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"CryptoService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"SingleService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					],
					"ActivatedRoute": [
						{
							"name": "url",
							"callPath": [
								"url"
							]
						},
						{
							"name": "params",
							"callPath": [
								"params"
							]
						},
						{
							"name": "queryParams",
							"callPath": [
								"queryParams"
							]
						},
						{
							"name": "fragment",
							"callPath": [
								"fragment"
							]
						},
						{
							"name": "data",
							"callPath": [
								"data"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/data/create",
				"payload": {
					"propertyName": "name.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/properties/data/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "crypto$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"crypto$"
								],
								"flowUrl": "rxjs/call-expressions/map/flow"
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"crypto$"
								],
								"flowUrl": "rxjs/call-expressions/tap/flow"
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_JOIN",
								"label": "Join Observable to Property",
								"callPath": [
									"crypto$"
								],
								"flowUrl": "rxjs/call-expressions/join/flow"
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query method/create/flow: {
	"funcParams": {
		"actionId": "METHOD_CREATE",
		"label": "Create New Method",
		"callPath": [],
		"flowUrl": "method/create/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query method/create/flow"
}
[info] [CLI] Called Query method/create/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g. getAll",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "(Optional): in csv format e.g. id:number,name:string",
				"type": "multi-input",
				"canBeEmpty": false
			},
			{
				"contextId": "returnType",
				"title": "What does the method return?",
				"type": "multi-option",
				"options": [
					{
						"name": "string"
					},
					{
						"name": "string[]"
					},
					{
						"name": "number"
					},
					{
						"name": "number[]"
					},
					{
						"name": "boolean"
					},
					{
						"name": "boolean[]"
					},
					{
						"name": "void"
					},
					{
						"name": "void[]"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "method/create",
				"payload": {
					"name": "name.value",
					"params": "params.value",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query method/create/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": [],
						"flowUrl": "angular-component/form-properties/add/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/data/flow"
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": [],
						"flowUrl": "rxjs/properties/subject/flow"
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": [],
				"flowUrl": "injectable/inject/flow"
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": [],
						"flowUrl": "method/create/flow"
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_COMPONENT_TO_ROUTE",
				"callPath": [],
				"flowUrl": "routing/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query rxjs/properties/data/flow: {
	"funcParams": {
		"actionId": "RXJS_PROPERTY_CREATE",
		"label": "Create Data Property",
		"callPath": [],
		"flowUrl": "rxjs/properties/data/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/properties/data/flow"
}
[info] [CLI] Called Query rxjs/properties/data/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input",
				"canBeEmpty": false
			},
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "CheckboxCategoriesComponent",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts"
					},
					{
						"name": "CheckboxCategoriesService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
					},
					{
						"name": "CryptoService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/crypto.service.ts"
					},
					{
						"name": "SingleService",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/single.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					},
					{
						"name": "ActivatedRoute",
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/node_modules/@angular/router/router.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"CheckboxCategoriesComponent": [],
					"CheckboxCategoriesService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"CryptoService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"SingleService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					],
					"ActivatedRoute": [
						{
							"name": "url",
							"callPath": [
								"url"
							]
						},
						{
							"name": "params",
							"callPath": [
								"params"
							]
						},
						{
							"name": "queryParams",
							"callPath": [
								"queryParams"
							]
						},
						{
							"name": "fragment",
							"callPath": [
								"fragment"
							]
						},
						{
							"name": "data",
							"callPath": [
								"data"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/data/create",
				"payload": {
					"propertyName": "name.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/properties/data/flow"
}
[info] [EventBus]: Broadcasting event ServiceDependencyInjected: {
	"type": "ServiceDependencyInjected",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ServiceDependencyInjected"
}
[info] [CommandBus]: Dispatching command CreateDataPropertyCommand: {
	"commandName": "CreateDataPropertyCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"entityPropertyName": "checkbox",
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts",
		"dependencyName": "CheckboxCategoriesService",
		"dependencyCallPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CreateDataPropertyCommand"
}
[info] [CLI] Calling Command rxjs/properties/data/create: {
	"funcParams": {
		"propertyName": "checkbox",
		"dependencyCallPath": [
			"getAll"
		],
		"dependencyName": "CheckboxCategoriesService",
		"dependencyPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/properties/data/create"
}
[info] [EventBus]: Broadcasted ServiceDependencyInjected: {
	"event": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"injectingFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ServiceDependencyInjected"
}
[info] [CommandBus]: Handled  CreateDataPropertyCommand: {
	"commandName": "CreateDataPropertyCommand",
	"payload": {
		"entityFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"entityPropertyName": "checkbox",
		"dependencyFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/services/checkbox-categories.service.ts",
		"dependencyName": "CheckboxCategoriesService",
		"dependencyCallPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CreateDataPropertyCommand"
}
[info] [CLI] Called Command rxjs/properties/data/create: {
	"message": "[CLI] Called Command rxjs/properties/data/create",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CheckboxCategoriesComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-list/flow: {
	"funcParams": {
		"actionId": "ADD_LIST_TEMPLATE",
		"label": "Display List",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-list/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-list/flow"
}
[info] [CLI] Called Query angular-component/templates/add-list/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "list",
				"title": "Which list template to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "ul",
						"contextVariables": []
					},
					{
						"label": "table",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			},
			{
				"contextId": "data",
				"title": "What data to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "checkbox$",
						"type": "Observable<CheckboxCategoriesModel[]>",
						"isReadonly": true,
						"typeProperties": [
							"title",
							"name"
						]
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "detail",
				"title": "Which template to use for details?",
				"type": "multi-option",
				"options": [
					{
						"label": "content",
						"contextVariables": []
					},
					{
						"label": "text",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-list",
				"payload": {
					"propertyName": "data.name",
					"listTemplate": "list.label",
					"detailTemplate": "detail.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-list/flow"
}
[info] [CLI] Calling Command angular-component/templates/add-list: {
	"funcParams": {
		"propertyName": "checkbox$",
		"listTemplate": "table",
		"detailTemplate": "text"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-list"
}
[info] [CommandBus]: Dispatching command AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html",
		"className": "CheckboxCategoriesComponent",
		"propertyName": "checkbox$",
		"position": 28,
		"listTemplate": "table",
		"detailTemplate": "text"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddListToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html",
		"className": "CheckboxCategoriesComponent",
		"propertyName": "checkbox$",
		"position": 28,
		"listTemplate": "table",
		"detailTemplate": "text"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddListToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-list: {
	"message": "[CLI] Called Command angular-component/templates/add-list",
	"level": "info"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CheckboxCategoriesComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/add-component/flow: {
	"funcParams": {
		"actionId": "ADD_COMPONENT_TEMPLATE",
		"label": "Display Component",
		"callPath": [],
		"flowUrl": "angular-component/add-component/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/add-component/flow"
}
[info] [CLI] Called Query angular-component/add-component/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "component",
				"title": "Which component do you want to add?",
				"type": "multi-option",
				"options": [
					{
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app.component.ts",
						"selector": "app-root",
						"name": "AppComponent"
					},
					{
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
						"selector": "app-checkbox-categories",
						"name": "CheckboxCategoriesComponent"
					},
					{
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
						"selector": "app-crypto",
						"name": "CryptoComponent"
					},
					{
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
						"selector": "employee-list",
						"name": "EmployeeListComponent"
					},
					{
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
						"selector": "app-single",
						"name": "SingleComponent"
					}
				],
				"extraOptions": [],
				"property": "selector",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/add-component",
				"payload": {
					"selector": "component.selector",
					"componentFilePath": "component.path",
					"componentName": "component.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/add-component/flow"
}
[info] [CLI] Calling Command angular-component/add-component: {
	"funcParams": {
		"selector": "app-checkbox-categories",
		"componentFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentName": "CheckboxCategoriesComponent"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/add-component"
}
[info] [CommandBus]: Dispatching command AddComponentToTemplate: {
	"commandName": "AddComponentToTemplate",
	"payload": {
		"selector": "app-checkbox-categories",
		"componentPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"parentComponentHtmlPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html",
		"componentName": "CheckboxCategoriesComponent",
		"position": 112
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddComponentToTemplate"
}
[info] [EventBus]: Broadcasting event ComponentAddedToTemplateEvent: {
	"type": "ComponentAddedToTemplateEvent",
	"payload": {
		"parentComponentPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentName": "CheckboxCategoriesComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ComponentAddedToTemplateEvent"
}
[info] [EventBus]: Broadcasted ComponentAddedToTemplateEvent: {
	"event": {
		"parentComponentPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentName": "CheckboxCategoriesComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ComponentAddedToTemplateEvent"
}
[error] [CommandBus]: Error AddComponentToTemplate: {
	"commandName": "AddComponentToTemplate",
	"payload": {
		"selector": "app-checkbox-categories",
		"componentPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"parentComponentHtmlPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html",
		"componentName": "CheckboxCategoriesComponent",
		"position": 112
	},
	"error": {},
	"level": "error",
	"message": "[CommandBus]: Error AddComponentToTemplate"
}
[info] [CommandBus]: Dispatching command ImportComponentCommand: {
	"commandName": "ImportComponentCommand",
	"payload": {
		"modulePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts",
		"modulesToInjectPaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportComponentCommand"
}
[error] [CommandBus]: Error ImportComponentCommand: {
	"commandName": "ImportComponentCommand",
	"payload": {
		"modulePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts",
		"modulesToInjectPaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		]
	},
	"error": {},
	"level": "error",
	"message": "[CommandBus]: Error ImportComponentCommand"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CheckboxCategoriesComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-layout/flow: {
	"funcParams": {
		"actionId": "ADD_LAYOUT_TEMPLATE",
		"label": "Display Layout",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-layout/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-layout/flow"
}
[info] [CLI] Called Query angular-component/templates/add-layout/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "layout",
				"title": "Which layout to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "section",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-layout",
				"payload": {
					"layoutTemplate": "layout.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-layout/flow"
}
[info] [CLI] Calling Command angular-component/templates/add-layout: {
	"funcParams": {
		"layoutTemplate": "section"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-layout"
}
[info] [CommandBus]: Dispatching command AddLayoutToTemplateCommand: {
	"commandName": "AddLayoutToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html",
		"className": "CheckboxCategoriesComponent",
		"position": 164,
		"layoutTemplate": "section"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddLayoutToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Handled  AddLayoutToTemplateCommand: {
	"commandName": "AddLayoutToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html",
		"className": "CheckboxCategoriesComponent",
		"position": 164,
		"layoutTemplate": "section"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddLayoutToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-layout: {
	"message": "[CLI] Called Command angular-component/templates/add-layout",
	"level": "info"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CheckboxCategoriesComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-detail/flow: {
	"funcParams": {
		"actionId": "ADD_DETAIL_TEMPLATE",
		"label": "Display Detail",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-detail/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-detail/flow"
}
[info] [CLI] Called Query angular-component/templates/add-detail/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "detail",
				"title": "Which detail template to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "content",
						"contextVariables": []
					},
					{
						"label": "text",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			},
			{
				"contextId": "data",
				"title": "What data to use?",
				"type": "multi-option",
				"options": [],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-detail",
				"payload": {
					"propertyName": "data.name",
					"detailTemplate": "detail.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-detail/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CheckboxCategoriesComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-form/flow: {
	"funcParams": {
		"actionId": "ADD_FORM_TEMPLATE",
		"label": "Display Form",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-form/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-form/flow"
}
[info] [CLI] Called Query angular-component/templates/add-form/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "form",
				"title": "Which form template to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "form",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			},
			{
				"contextId": "data",
				"title": "What data to use?",
				"type": "multi-option",
				"options": [],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-form",
				"payload": {
					"propertyName": "data.name",
					"formTemplate": "form.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-form/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CheckboxCategoriesComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-list/flow: {
	"funcParams": {
		"actionId": "ADD_LIST_TEMPLATE",
		"label": "Display List",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-list/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-list/flow"
}
[info] [CLI] Called Query angular-component/templates/add-list/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "list",
				"title": "Which list template to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "ul",
						"contextVariables": []
					},
					{
						"label": "table",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			},
			{
				"contextId": "data",
				"title": "What data to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "checkbox$",
						"type": "Observable<CheckboxCategoriesModel[]>",
						"isReadonly": true,
						"typeProperties": [
							"title",
							"name"
						]
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "detail",
				"title": "Which template to use for details?",
				"type": "multi-option",
				"options": [
					{
						"label": "content",
						"contextVariables": []
					},
					{
						"label": "text",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-list",
				"payload": {
					"propertyName": "data.name",
					"listTemplate": "list.label",
					"detailTemplate": "detail.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-list/flow"
}
[info] [CLI] Calling Command angular-component/templates/add-list: {
	"funcParams": {
		"propertyName": "checkbox$",
		"listTemplate": "ul",
		"detailTemplate": "text"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-list"
}
[info] [CommandBus]: Dispatching command AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html",
		"className": "CheckboxCategoriesComponent",
		"propertyName": "checkbox$",
		"position": 29,
		"listTemplate": "ul",
		"detailTemplate": "text"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddListToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Handled  AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html",
		"className": "CheckboxCategoriesComponent",
		"propertyName": "checkbox$",
		"position": 29,
		"listTemplate": "ul",
		"detailTemplate": "text"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddListToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-list: {
	"message": "[CLI] Called Command angular-component/templates/add-list",
	"level": "info"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CheckboxCategoriesComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-layout/flow: {
	"funcParams": {
		"actionId": "ADD_LAYOUT_TEMPLATE",
		"label": "Display Layout",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-layout/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-layout/flow"
}
[info] [CLI] Called Query angular-component/templates/add-layout/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "layout",
				"title": "Which layout to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "section",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-layout",
				"payload": {
					"layoutTemplate": "layout.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-layout/flow"
}
[info] [CLI] Calling Command angular-component/templates/add-layout: {
	"funcParams": {
		"layoutTemplate": "section"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-layout"
}
[info] [CommandBus]: Dispatching command AddLayoutToTemplateCommand: {
	"commandName": "AddLayoutToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html",
		"className": "CheckboxCategoriesComponent",
		"position": 187,
		"layoutTemplate": "section"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddLayoutToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Handled  AddLayoutToTemplateCommand: {
	"commandName": "AddLayoutToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html",
		"className": "CheckboxCategoriesComponent",
		"position": 187,
		"layoutTemplate": "section"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddLayoutToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-layout: {
	"message": "[CLI] Called Command angular-component/templates/add-layout",
	"level": "info"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CheckboxCategoriesComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-detail/flow: {
	"funcParams": {
		"actionId": "ADD_DETAIL_TEMPLATE",
		"label": "Display Detail",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-detail/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-detail/flow"
}
[info] [CLI] Called Query angular-component/templates/add-detail/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "detail",
				"title": "Which detail template to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "content",
						"contextVariables": []
					},
					{
						"label": "text",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			},
			{
				"contextId": "data",
				"title": "What data to use?",
				"type": "multi-option",
				"options": [],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-detail",
				"payload": {
					"propertyName": "data.name",
					"detailTemplate": "detail.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-detail/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CheckboxCategoriesComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-detail/flow: {
	"funcParams": {
		"actionId": "ADD_DETAIL_TEMPLATE",
		"label": "Display Detail",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-detail/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-detail/flow"
}
[info] [CLI] Called Query angular-component/templates/add-detail/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "detail",
				"title": "Which detail template to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "content",
						"contextVariables": []
					},
					{
						"label": "text",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			},
			{
				"contextId": "data",
				"title": "What data to use?",
				"type": "multi-option",
				"options": [],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-detail",
				"payload": {
					"propertyName": "data.name",
					"detailTemplate": "detail.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-detail/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CheckboxCategoriesComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/add-component/flow: {
	"funcParams": {
		"actionId": "ADD_COMPONENT_TEMPLATE",
		"label": "Display Component",
		"callPath": [],
		"flowUrl": "angular-component/add-component/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/add-component/flow"
}
[info] [CLI] Called Query angular-component/add-component/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "component",
				"title": "Which component do you want to add?",
				"type": "multi-option",
				"options": [
					{
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/app.component.ts",
						"selector": "app-root",
						"name": "AppComponent"
					},
					{
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
						"selector": "app-checkbox-categories",
						"name": "CheckboxCategoriesComponent"
					},
					{
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/crypto/crypto.component.ts",
						"selector": "app-crypto",
						"name": "CryptoComponent"
					},
					{
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
						"selector": "employee-list",
						"name": "EmployeeListComponent"
					},
					{
						"path": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/single/single.component.ts",
						"selector": "app-single",
						"name": "SingleComponent"
					}
				],
				"extraOptions": [],
				"property": "selector",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/add-component",
				"payload": {
					"selector": "component.selector",
					"componentFilePath": "component.path",
					"componentName": "component.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/add-component/flow"
}
[info] [CLI] Calling Command angular-component/add-component: {
	"funcParams": {
		"selector": "app-checkbox-categories",
		"componentFilePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentName": "CheckboxCategoriesComponent"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/add-component"
}
[info] [CommandBus]: Dispatching command AddComponentToTemplate: {
	"commandName": "AddComponentToTemplate",
	"payload": {
		"selector": "app-checkbox-categories",
		"componentPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"parentComponentHtmlPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html",
		"componentName": "CheckboxCategoriesComponent",
		"position": 5
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddComponentToTemplate"
}
[info] [EventBus]: Broadcasting event ComponentAddedToTemplateEvent: {
	"type": "ComponentAddedToTemplateEvent",
	"payload": {
		"parentComponentPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentName": "CheckboxCategoriesComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ComponentAddedToTemplateEvent"
}
[info] [EventBus]: Broadcasted ComponentAddedToTemplateEvent: {
	"event": {
		"parentComponentPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentName": "CheckboxCategoriesComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ComponentAddedToTemplateEvent"
}
[error] [CommandBus]: Error AddComponentToTemplate: {
	"commandName": "AddComponentToTemplate",
	"payload": {
		"selector": "app-checkbox-categories",
		"componentPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"parentComponentHtmlPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html",
		"componentName": "CheckboxCategoriesComponent",
		"position": 5
	},
	"error": {},
	"level": "error",
	"message": "[CommandBus]: Error AddComponentToTemplate"
}
[info] [CommandBus]: Dispatching command ImportComponentCommand: {
	"commandName": "ImportComponentCommand",
	"payload": {
		"modulePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts",
		"modulesToInjectPaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportComponentCommand"
}
[error] [CommandBus]: Error ImportComponentCommand: {
	"commandName": "ImportComponentCommand",
	"payload": {
		"modulePath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts",
		"modulesToInjectPaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		]
	},
	"error": {},
	"level": "error",
	"message": "[CommandBus]: Error ImportComponentCommand"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CheckboxCategoriesComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-layout/flow: {
	"funcParams": {
		"actionId": "ADD_LAYOUT_TEMPLATE",
		"label": "Display Layout",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-layout/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-layout/flow"
}
[info] [CLI] Called Query angular-component/templates/add-layout/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "layout",
				"title": "Which layout to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "section",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-layout",
				"payload": {
					"layoutTemplate": "layout.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-layout/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CheckboxCategoriesComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-detail/flow: {
	"funcParams": {
		"actionId": "ADD_DETAIL_TEMPLATE",
		"label": "Display Detail",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-detail/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-detail/flow"
}
[info] [CLI] Called Query angular-component/templates/add-detail/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "detail",
				"title": "Which detail template to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "content",
						"contextVariables": []
					},
					{
						"label": "text",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			},
			{
				"contextId": "data",
				"title": "What data to use?",
				"type": "multi-option",
				"options": [],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-detail",
				"payload": {
					"propertyName": "data.name",
					"detailTemplate": "detail.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-detail/flow"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "CheckboxCategoriesComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_LIST_TEMPLATE",
				"label": "Display List",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-list/flow"
			},
			{
				"actionId": "ADD_FORM_TEMPLATE",
				"label": "Display Form",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-form/flow"
			},
			{
				"actionId": "ADD_DETAIL_TEMPLATE",
				"label": "Display Detail",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-detail/flow"
			},
			{
				"actionId": "ADD_LAYOUT_TEMPLATE",
				"label": "Display Layout",
				"callPath": [],
				"flowUrl": "angular-component/templates/add-layout/flow"
			},
			{
				"actionId": "ADD_COMPONENT_TEMPLATE",
				"label": "Display Component",
				"callPath": [],
				"flowUrl": "angular-component/add-component/flow"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Calling Query angular-component/templates/add-list/flow: {
	"funcParams": {
		"actionId": "ADD_LIST_TEMPLATE",
		"label": "Display List",
		"callPath": [],
		"flowUrl": "angular-component/templates/add-list/flow"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/add-list/flow"
}
[info] [CLI] Called Query angular-component/templates/add-list/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "list",
				"title": "Which list template to show?",
				"type": "multi-option",
				"options": [
					{
						"label": "ul",
						"contextVariables": []
					},
					{
						"label": "table",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			},
			{
				"contextId": "data",
				"title": "What data to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "checkbox$",
						"type": "Observable<CheckboxCategoriesModel[]>",
						"isReadonly": true,
						"typeProperties": [
							"title",
							"name"
						]
					}
				],
				"extraOptions": [],
				"property": "name",
				"canBeEmpty": false
			},
			{
				"contextId": "detail",
				"title": "Which template to use for details?",
				"type": "multi-option",
				"options": [
					{
						"label": "content",
						"contextVariables": []
					},
					{
						"label": "text",
						"contextVariables": []
					}
				],
				"extraOptions": [],
				"property": "label",
				"canBeEmpty": false
			}
		],
		"request": {
			"config": {
				"url": "angular-component/templates/add-list",
				"payload": {
					"propertyName": "data.name",
					"listTemplate": "list.label",
					"detailTemplate": "detail.label"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/add-list/flow"
}
[info] [CommandBus]: Dispatching command AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html",
		"className": "CheckboxCategoriesComponent",
		"propertyName": "checkbox$",
		"position": 238,
		"listTemplate": "ul",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddListToTemplateCommand"
}
[info] [CLI] Calling Command angular-component/templates/add-list: {
	"funcParams": {
		"propertyName": "checkbox$",
		"listTemplate": "ul",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-list"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Handled  AddListToTemplateCommand: {
	"commandName": "AddListToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry",
		"componentTs": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.ts",
		"componentHtml": "/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component.html",
		"className": "CheckboxCategoriesComponent",
		"propertyName": "checkbox$",
		"position": 238,
		"listTemplate": "ul",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddListToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-list: {
	"message": "[CLI] Called Command angular-component/templates/add-list",
	"level": "info"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/apuczka/Desktop/Angela/projekty/lowgular-course-entry/src/app/ui/checkbox-categories/checkbox-categories.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
